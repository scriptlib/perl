#!/usr/bin/perl -w
use strict;
use File::Spec::Functions qw/catfile/;
use Getopt::Long;
use MyPlace::URLRule::SimpleQuery;


my $DEFAULT_HOST = "weibo.com,weipai.cn,vlook.cn";
my $DB_EXT = ".DB";
my $ID_EXT = ".ID";
my $ENCODING = "utf8";
#binmode STDOUT,$ENCODING;
#binmode STDERR,$ENCODING;
my @OPTIONS = qw/
		help|h
		manual|man
		list|l
		debug|d
		hosts|sites:s
		command|c:s
		update|u
		add|a
		/;
my %OPTS;
GetOptions(\%OPTS,@OPTIONS);


sub process_command {
	my $cmd = shift;
	my $target = shift;
	if($cmd eq 'LIST') {
		my $idx = 1;
		foreach my $name(keys %{$target}) {
			next unless($target->{$name});
			print STDERR "[" . uc($name),"]:\n";
			foreach my $item(@{$target->{$name}}) {
				printf "\t[%03d] %-20s [%d]  %s\n",$idx,$item->[1],$item->[2],$item->[0];
				$idx++;
			}
		}
		return 0;
	}
	elsif($cmd eq '_UPGRADE') {
		return 0;
	}
	elsif(($cmd eq 'UPDATE') or ($cmd eq 'SAVE')) {
		use MyPlace::URLRule::OO;
		my $URLRULE = new MyPlace::URLRule::OO('action'=>$cmd);
		my @request;
		my $count = 0;
		foreach my $name(keys %{$target}) {
			next unless($target->{$name});
			foreach my $item(@{$target->{$name}}) {
				next unless($item && @{$item});
				push @request,{
					count=>1,
					level=>$item->[2],
					url=>$item->[1],
					title=>$item->[0] . "/$name/",
				};
				$count++;
			}
		}
		my $idx = 0;
		foreach(@request) {
			$idx++;
			$_->{progress} = "[$idx/$count]";
			$URLRULE->autoApply($_);
		}
		return 0;
	}
}
my @NAMES = @ARGV;
if(!@NAMES) {
	print STDERR "Reading names from STDIN ...\n";
	while(<STDIN>) {
		chomp;
		push @NAMES,$_;
	}
	print STDERR scalar(@NAMES) . " names read.\n";
}
my $COMMAND = $OPTS{add} ? 'ADD' : $OPTS{list} ? 'LIST' : $OPTS{update} ? 'UPDATE' : $OPTS{command} ? uc($OPTS{command}) : 'UPDATE';
my $HOSTSNAME = $OPTS{hosts} || $DEFAULT_HOST;
my @HOSTS = split(/\s*,\s*/,$HOSTSNAME);

#print STDERR "$COMMAND ",join(", ",@NAMES), " [",join(", ",@HOSTS),"]\n";
if($COMMAND eq 'ADD') {
	foreach my $host (@HOSTS) {
		my $SQ = MyPlace::URLRule::SimpleQuery->new($host);
		$SQ->add(@NAMES);
		$SQ->save;
	}
	exit 0;
}

my %target;
foreach my $host (@HOSTS) {
	my $SQ = new MyPlace::URLRule::SimpleQuery($host);
	$target{$host} = [];
	foreach my $keyword (@NAMES) {
		my($status,@result) = $SQ->query($keyword);
		if(!$status) {
			print STDERR "[$host] Error: ",@result,"\n";
		}
		else {
			push @{$target{$host}},@result;
		}
	}
	$SQ = undef;
}
exit process_command($COMMAND,\%target);

__END__

#       vim:filetype=perl
