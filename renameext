#!/usr/bin/perl -w
###APPNAME:     renameext
###APPAUTHOR:   duel
###APPDATE:	Sun Mar 30 12:46:15 2008
###APPVER:	0.1
###APPDESC:	rename files using perl regexp
###APPUSAGE:	[-t] (pattern|func) (files...) 
###APPEXAMPLE:	renameext -t 's/^.*(\d+)\.jpg/$1' *\n\trenameext -t 'ucfirst' *
###APPOPTION:	-t:Test Mode
use strict;
$ARGV[0]="-h" unless(@ARGV);
use lib $ENV{XR_PERL_MODULE_DIR};
use MyPlace::Script::Usage qw/help_even_empty format_help/;

exit 0 if(help_even_empty($0,@ARGV));

my $exp=shift;
my $test;
$exp=shift,$test="true" if($exp eq "-t");
exit(format_help($0)) unless(@ARGV);

use utf8;
#my $exp_opt="";
#if($exp =~ /^\/(.*)\/([gisxm]*)$/) {
#    $exp = $1;
#    $exp_opt = $2;
#}

if($exp =~ /\/.*\//) {
    eval("sub s_code {my \$r = shift;\$r =~ $exp if(\$r);return \$r}");
}
else {
    eval("sub s_code {my \$r = shift;\$r = $exp \$r;return \$r}");
}
die("$@\n") if($@);

my $tempname = 0;
while(-e $tempname) {
    $tempname ++;
}
sub my_rename {
    my ($old,$new)=@_;
    rename $old,"$tempname" or return undef;
    rename "$tempname",$new or return undef;
    return 1;
}


my $dfile=0;
foreach my $old(grep !/^\.\.?$/,@ARGV) {
    my $new = &s_code($old);
    if($new eq $old) {
        next;
    }
    if(-e $new) {
        $dfile++;
        print STDERR $dfile,"\"$old\"\n\t->\"$new\" [Failed:File exists]\n";
        next;
    }
    if($test) {
        print STDERR ("\"$old\"\n\t->\"$new\" (Test only) [Sucessed!]\n");
    }
    else {
        if(&my_rename($old,$new)) {
            print STDERR ("\"$old\"\n\t->\"$new\" [Sucessed!]\n");
        }
        else {
            print STDERR ("\"$old\"\n\t->\"$new\" [Failed:$!]\n");
        }
    }
}
