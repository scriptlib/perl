#!/usr/bin/perl -w
# $Id$
use strict;
require v5.10.0;
our $VERSION = 'v0.1';

BEGIN
{
    my $PROGRAM_DIR = $0;
    $PROGRAM_DIR =~ s/[^\/\\]+$//;
    $PROGRAM_DIR = "./" unless($PROGRAM_DIR);
    unshift @INC, 
        map "$PROGRAM_DIR$_",qw{modules lib ../modules ..lib};
}

my %OPTS;
my @OPTIONS = qw/help|h|? version|ver edit-me manual|man/;

if(@ARGV)
{
    require Getopt::Long;
    require MyPlace::Usage;
    Getopt::Long::GetOptions(\%OPTS,@OPTIONS);
    MyPlace::Usage::Process(\%OPTS,$VERSION);
}
else
{
    require MyPlace::Usage;
    MyPlace::Usage::PrintHelp();
}

use MyPlace::Search::Sogou qw/search_images/;
my $query = shift;
my $start_page = shift;
if($start_page and ($start_page !~ m/^\d+$/)) {
    unshift @ARGV,$start_page;
    $start_page = 1;
}
else {
    $start_page = 1;
}
my $count;
my %opts;
foreach(@ARGV) {
    if(m/\s*([^=]+)\s*=\s*(.+?)\s*$/) {
        my ($key,$value) = ($1,$2);
        $key = 'page' if($key eq 'start');
        if($key eq 'length' or $key eq 'count' or $key eq 'pages') {
            $count = $value;
        }
        elsif($key eq 'query' or $key eq 'keyword') {
            $query = $value;
        }
        else {
            $opts{$1}=$2;
        }
    }
}


if((!$opts{page}) and $start_page) {
    $opts{page} = $start_page;
}
else {
    $start_page = $opts{page};
}
my $last_page = $start_page + ($count ? $count : 0);
foreach my $index ($start_page .. $last_page) {
    $opts{page} = $index;
    my %result = search_images ($query,%opts);
    print STDERR "For $query [$index/$last_page]," . ' Get ' . $result{count} . " images";
    if($result{count}) {
        if($result{count} < 20 and $index < $last_page) {
            print STDERR "\nLess than 20 images returned, searching will stop.\n";
        }
        else {
            print STDERR "\n";
        }
        foreach(@{$result{result}}) {
            print $_->{url},"\n";
        }
    }
}
exit 0;

__END__

=pod

=head1  NAME

sogou.search.image - Searching sogou.com for images

=head1  SYNOPSIS

sogou.search.image query [page] [params...]

=head1  OPTIONS

=over 12

=item B<--version>

Print version infomation.

=item B<-h>,B<--help>

Print a brief help message and exits.

=item B<--manual>,B<--man>

View application manual

=item B<--edit-me>

Invoke 'editor' against the source

=back

=head1  DESCRIPTION

Searching pic.sogou.com for images

=head1  CHANGELOG

    2010-08-15  xiaoranzzz  <xiaoranzzz@myplace.hell>
        
        * file created.

=head1  AUTHOR

xiaoranzzz <xiaoranzzz@myplace.hell>

=cut


