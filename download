#!/usr/bin/perl -w
# $Id$
use MyPlace::Program::Download;
my $main = new MyPlace::Program::Download;

#sub notify {
#	my $kept = shift;
#	my $url = shift;
#	my $exitval = shift;
#	print STDERR "[EXIT:$exitval] $url\n";
#}
#$main->set_reportor(\&notify,"MyPlace::Program::Download");

exit $main->execute(@ARGV);

__END__

=pod

=head1 NAME

download - customized frontend for wget/curl

=head1 SYNOPSIS

download [OPTIONS] URL

	download "http://www.google.com"
	download -s google.html "http://www.google.com"
	download -a "http://www.google.com"

=head1 OPTIONS

=over

=item B<--verbose>,B<-v>

Verbose messaging

=item B<--url>,B<-u>

Specify the URL

=item B<--saveas>,B<-s>

Specify target filename

=item B<--directory>,B<-d>

Create directories if necessary

=item B<--name>,B<-n>

Name downloading session

=item B<--refurl>,B<-r>

Set referer URL

=item B<--cookie>,B<-b>

Set cookie file

=item B<--log>,B<-l>

Enable logging

=item B<--autoname>,B<-a>

Auto rename if target exists

=item B<--program>,B<-p>

Specify downloader, either wget or curl

=item B<--maxtime>,B<-m>

Set timeout

=item B<--force>,B<-f>

Force overwritting

=back

=head1 DESCRIPTION

Not a downloader indeed, but simply a frontend for
some real downloader e.g. B<curl> or B<wget>.

=head1 CHANGELOG

2007-10-28	xiaoranzzz	<xiaoranzzz@myplace.hell>

* Initial version

2012-12-19	xiaoranzzz	<xiaoranzzz@myplace.hell>

* Add pod document
* Use Getopt::Long.

=head1 AUTHOR

xiaoranzzz <xiaoranzzz@myplace.hell>

=cut



