#!/usr/bin/perl -w
# $Id$
use strict;
require v5.8.0;
our $VERSION = 'v0.1';

BEGIN
{
    my $PROGRAM_DIR = $0;
    $PROGRAM_DIR =~ s/[^\/\\]+$//;
    $PROGRAM_DIR = "./" unless($PROGRAM_DIR);
    unshift @INC, 
        map "$PROGRAM_DIR$_",qw{modules lib ../modules ..lib};
}

my %OPTS;
my @OPTIONS = qw/help|h|? version|ver edit-me manual|man/;

if(@ARGV)
{
    require Getopt::Long;
    require MyPlace::Usage;
    Getopt::Long::GetOptions(\%OPTS,@OPTIONS);
    MyPlace::Usage::Process(\%OPTS,$VERSION);
}

my @query = (
    '/.+/',
    '/.+/',
    '/.+/',
    'newly',
);

my $cmd = 'ECHO';

if(@ARGV)
{
    $cmd = shift;
    if($cmd =~ m/^(DOWNLOAD|ECHO|DUMP)$/i) 
    {
        $cmd = uc($cmd);
    }
    else
    {
        unshift @ARGV,$cmd;
        $cmd = 'ECHO';
    }
    my $max_count = 3;
    my $current = 0;
    while(@ARGV && $current < $max_count)
    {
        $query[$current] = shift;
        $current++;
    }
}
print STDERR join(' ',('urlrule_task',$cmd,join(',',@query))),"\n";
exec('urlrule_task',$cmd,join(',',@query));


__END__

=pod

=head1  NAME

urlrule_task_newly - PERL script

=head1  SYNOPSIS

urlrule_task_newly [options] ...

=head1  OPTIONS

=over 12

=item B<--version>

Print version infomation.

=item B<-h>,B<--help>

Print a brief help message and exits.

=item B<--manual>,B<--man>

View application manual

=item B<--edit-me>

Invoke 'editor' against the source

=back

=head1  DESCRIPTION

___DESC___

=head1  CHANGELOG

    2010-06-22  xiaoranzzz  <xiaoranzzz@myplace.hell>
        
        * file created.

=head1  AUTHOR

xiaoranzzz <xiaoranzzz@myplace.hell>

=cut


