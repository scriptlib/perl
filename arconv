#!/usr/bin/perl -w
###APPNAME:     arconv
###APPAUTHOR:   duel
###APPDATE:	2009-02-01 02:39:16
###APPVER:	0.1
###APPDESC:     convert archive format	
###APPUSAGE:	(fmt_from) (fmt_to) archives
###APPEXAMPLE:	arconv rar zip foo.rar 
###APPOPTION:	
use strict;

#ENV variable MUST be defined somewhere,
#FOR perl to search modules from,
#OR nothing will work
use lib $ENV{XR_PERL_MODULE_DIR};
use File::Temp qw/tempdir/;
use Cwd;
use MyPlace::Script::Usage qw/help_required help_even_empty/;
#exit 0 if(help_required($0,@ARGV));
exit 0 if(help_even_empty($0,@ARGV));

my %compress = (
    "zip"=>["zip","-r","ARCHIVE","DIRECTORY"],
    "zbook"=>["zip","-r","ARCHIVE","DIRECTORY"],
    "7z"=>["7z","a","-mx9","ARCHIVE","DIRECTORY"],
    "rar"=>["rar","a","-r","ARCHIVE","DIRECTORY"],
    "tar"=>["tar","-cvf","ARCHIVE","DIRECTORY"],
    "tar.gz"=>["tar","-czvf","ARCHIVE","DIRECTORY"],
    "tar.bz2"=>["tar","--bzip2","-cvf","ARCHIVE","DIRECTORY"],
);
my %uncompress = (
    "rar"=>["unrar","x","ARCHIVE","FILES","DIRECTORY"],
    "7z"=>["7z","x","ARCHIVE","-oDIRECTORY","FILES"],
    "chm"=>["7z","x","ARCHIVE","-oDIRECTORY","FILES"],
    "zip"=>["unzip","ARCHIVE","FILES","-d","DIRECTORY"],
    "tar"=>["tar","-xvf","ARCHIVE","-C","DIRECTORY"],
    "tar.gz"=>["tar","-xzvf","ARCHIVE","-C","DIRECTORY"],
    "tar.bz2"=>["tar","--bzip2","-xvf","ARCHIVE","-C","DIRECTORY"],
);

sub build_cmd {
    my ($ref,$arc,$d,$fs) = @_;
    my @result;
    foreach (@{$ref}) {
        my $str = $_;
        $str =~ s/ARCHIVE/$arc/g if($arc);
        $str =~ s/DIRECTORY/$d/g if($d);
        $str =~ s/FILES/$fs/g if($fs);
        push @result,$str;
    }
#    unshift @result,"echo";
    print STDERR join(" ",@result),"\n";
    return @result;
}

my $fmt_from=shift;
my $fmt_to=shift;
die("Invalid Usage\n") unless($fmt_to);
my $cmd_from=$uncompress{$fmt_from};
my $cmd_to=$compress{$fmt_to};
die("Uncompression of \"$fmt_from\" is not supported\n") unless($cmd_from);
die("Compression of \"$fmt_to\" is not supported\n") unless($cmd_to);

my @files=@ARGV;
unless(@files) {
    print STDERR "Reading file list from standard input...\n";
    while(<STDIN>) {
        chomp;
        push @files,$_;
    }
}

die("No archive to perform convertion\n") unless(@files);

my $cwd = getcwd();
foreach my $src (@files) {
    $src = Cwd::abs_path($src);
    my $dst = $src; 
    $dst =~ s/\.$fmt_from$/\.$fmt_to/;
    print STDERR "FROM    $fmt_from   \t:$src\nTO      $fmt_to   \t:$dst\n";
    my $tmpdir = tempdir("tmp.XXXXXXXX");
    die("$!\n") unless($tmpdir);
#    die("$tmpdir:$src -> $dst\n");
    if(system(build_cmd($cmd_from,$src,$tmpdir,'*')) == 0) {
        chdir $tmpdir;
        if(system(build_cmd($cmd_to,$dst,".",'*'))==0) {
#            system("rm","-i","--",$src);
        }
        chdir $cwd;
    }
    else {
        print STDERR "Error occured,process abort!\n";
    }
    system("rm","-fdr","--",$tmpdir);
}


