#!/usr/bin/perl -w
###APPNAME:	plnew
###APPAUTHOR:	xiaoranzzz
###APPDATE:	2007-09-14 06:00
###APPVER:	0.1
###APPDESC:	Create a new perl script
###APPUSAGE:	[Options] (name)
###APPEXAMPLE:	plnew plnew
###APPOPTION:	-s:No template used|-r:Read from stdin

use strict;
use Env qw(USER HOSTNAME);


$ARGV[0]="--help" unless(@ARGV);
exit 0 unless(system("plhelp",$0,(@ARGV)));

my $pldir=$ENV{XR_PERL_SOURCE_DIR};
die "Can't not locate script directory.\n" if(!$pldir);
die "Direcoty not exists:\"$pldir\"\n" if (! -d $pldir);


my $fname;
my $OPT_READ;
my $OPT_SIMPLE;
foreach my $opt(@ARGV) {
    if($opt eq "-s") {
        $OPT_SIMPLE=1;
    }
    elsif($opt eq "-r") {
        $OPT_READ=1;
    }
    else {
        if($fname) {
            print STDERR "\"$fname\" ingored...\n";
        }
        $fname=$opt;
    }
}
if(-f "$pldir/$fname") {
    $fname="$pldir/$fname";
}
elsif(-f "$pldir/$fname.pl") {
    $fname="$pldir/$fname.pl";
}
elsif( $fname =~ /\.[^\.]*$/) {
    $fname="$pldir/$fname";
}
else {
    #$fname=$pldir . "/" . $fname . ".pl";
    $fname=$pldir . "/" . $fname;
}


my $editor="vim";
$editor = "notepad++" if($ENV{"OS"} and $ENV{"OS"} =~ /win/i);

if (-f $fname) {
    print("$fname exists,will be open for editing instead.\n");
    system $editor,$fname;
    exit 0;
}

open PIPE,">:utf8",$fname or die("$!\n");
my $date=localtime();
$USER="xiaoranzzz" unless($USER);

my $EMAIL="$USER\@" . (defined $HOSTNAME ? $HOSTNAME : "myplace.hell");

if($OPT_SIMPLE) {
    print PIPE "#!/usr/bin/perl\n";
}
else {
    my $template=$pldir . "/" .  "script_template";
    if(-f $template) {
        open TEMPDATA,'<',$template;
        while(<TEMPDATA>) {
            s/___EMAIL___/$EMAIL/g;
            s/___AUTHOR___/$USER/g;
            s/___NAME___/$ARGV[0]/g;
            s/___DATE___/$date/g;
            print(PIPE);
        }
        close(TEMPDATA);
    }
}
if($OPT_READ) {
    while(<STDIN>) {
        s/___EMAIL___/$EMAIL/g;
        s/___AUTHOR___/$USER/;
        s/___NAME___/$ARGV[0]/;
        s/___DATE___/$date/;
        print(PIPE);
    }
}
close(PIPE);
if(-f $fname)
{
    use File::stat;
    my $oldst = stat($fname);
    system("\"$editor\" \"$fname\"");
    my $newst = stat($fname);
    if($oldst->mtime < $newst->mtime) {
        print STDERR "$fname modified.\n";
        print STDERR "make it executable.\n";
        chmod(0775,$fname) or print STDERR "$!\n";
#        print STDERR "Add svn:keywords.\n";
#        system("svn","add",$fname);
#        system("svn","propset","svn:keywords","Id",$fname);
    }
    else {
        print STDERR "$fname remain the same.\nunlink it.\n";
        unlink($fname) or print STDERR "$!\n";
    }
}
