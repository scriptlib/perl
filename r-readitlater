#!/usr/bin/perl -w
# $Id$
use strict;
require v5.8.0;
our $VERSION = 'v0.1';

BEGIN
{
    our $PROGRAM_DIR = $ENV{XR_PERL_SOURCE_DIR};
    unless($PROGRAM_DIR) {
        $PROGRAM_DIR = $0;
        $PROGRAM_DIR =~ s/[^\/\\]+$//;
        $PROGRAM_DIR =~ s/\/+$//;
        $PROGRAM_DIR = "." unless($PROGRAM_DIR);
    }
    unshift @INC, 
        map "$PROGRAM_DIR/$_",qw{modules lib ../modules ..lib};
}

my %OPTS;
my @OPTIONS = qw/help|h|? version|ver edit-me manual|man user|u=s action|a=s pass|p=s/;

if(@ARGV)
{
    require Getopt::Long;
    require MyPlace::Usage;
    Getopt::Long::GetOptions(\%OPTS,@OPTIONS);
    MyPlace::Usage::Process(\%OPTS,$VERSION);
}
else
{
    require MyPlace::Usage;
    MyPlace::Usage::PrintHelp();
    exit 0;
}

use MyPlace::Config;
my $configfile = $ENV{'HOME'} . '/.readitlater';
my $config = MyPlace::Config->new();

sub read_config {
	$config->read_plainfile($configfile);
}

sub write_config {
	$config->write_plainfile($configfile);
}

my @zenity = qw/zenity --width=240 --height=60 --title=r-readitlater/;

sub die_for {
	my $msg = shift;
	system(@zenity,'--error',"--text=$msg");
	die($msg . "\n");
}

sub read_input {
	my $msg = shift;
	my $sec = shift;
	if(!$sec) {
		open FI,"-|",@zenity,'--entry',"--text=$msg";
	}
	else {
		open FI,"-|",@zenity,'--password',"--title=$msg";
	}
	my $value = <FI>;
	close FI;
	chomp($value) if($value);
	return $value;
}

my $api = 'https://readitlaterlist.com/v2';
my $key = '555AcqvMd51a4f1496pG758Ha2TGh142';
my $user = $OPTS{'user'};
my $action = $OPTS{'action'};
my $pass = $OPTS{'pass'};

$action = shift unless($action);
die_for("No action specified.\n") unless($action);

foreach(@ARGV) {
	s/&/%26/g;
	s/\?/%3F/g;
	s/:/%3A/g;
	s/\//%2F/g;
	s/ /%20/g;
}

sub build_request {
	read_config();
	($user) = $config->propget('account','default','user') unless($user);
	$user = read_input('Input your username for Readitlater:') unless($user);
	die_for("No account information.\n") unless($user);
	($pass) = $config->propget('account',$user,'password') unless($pass);
	$pass = read_input('Input your passowrd for ' . $user) unless($pass);
	die_for('No account information found in ' . $configfile . " for $user.\n") unless($pass);
	$config->propset($pass,'account',$user,'password');
	$config->propset($user,'account','default','user');
	write_config();
	return "$api/$action?username=$user&password=$pass&apikey=$key&";
}

my $request = build_request() . join("&",@ARGV);
print STDERR $request,"\n";
open FI,'-|','curl',,'-#',$request;
my $response = join("",<FI>);
close FI;

if($action eq 'add') {
	print STDERR $response,"\n";
	if($response =~ /200\s*OK/) {
		system(@zenity,qw/--timeout=6 --info --text/, $response);
		exit 0;
	}
	else {
		die_for($response);
	}
}
elsif($action =~ m/^stats|get$/) {
	print $response;
}
else {
	die_for($response);
}


__END__

=pod

=head1  NAME

r-readitlater - PERL script

=head1  SYNOPSIS

r-readitlater [options] ...

=head1  OPTIONS

=over 12

=item B<--version>

Print version infomation.

=item B<-h>,B<--help>

Print a brief help message and exits.

=item B<--manual>,B<--man>

View application manual

=item B<--edit-me>

Invoke 'editor' against the source

=item B<-a>, B<--action>

Action to perform

=item B<-u>, B<--user>

Specify username 

=item B<-p>, B<--password>

Specify password for username

=back

=head1  DESCRIPTION

___DESC___

=head1  CHANGELOG

    2011-10-02 12:29  xiaoranzzz  <xiaoranzzz@myplace.hell>
        
        * file created.
	2011-10-02 20:24  xiaoranzzz  <xiaoranzzz@myplace.hell>

		* version 0.2
		* added GUI
		* added api full supports

=head1  AUTHOR

xiaoranzzz <xiaoranzzz@myplace.hell>

=cut

#       vim:filetype=perl
