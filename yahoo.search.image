#!/usr/bin/perl -w
###APPNAME:     yahoo.search.image
###APPAUTHOR:   xiaoranzzz
###APPDATE:	Sun May 23 18:49:37 2010
###APPVER:	0.1
###APPDESC:     yahoo.search.image	
###APPUSAGE:	(keyword) [options...]
###APPEXAMPLE:	yahoo.search.image 
###APPOPTION:	
use strict;

#ENV variable MUST be defined somewhere,
#FOR perl to search modules from,
#OR nothing will work
use lib $ENV{XR_PERL_MODULE_DIR};

use MyPlace::Script::Usage qw/help_required help_even_empty/;
exit 0 if(help_even_empty($0,@ARGV));
use MyPlace::Yahoo::BOSS;
my %args = (
    count=>'50',
    style=>'raw',
    filter=>'no',
    dimensions=>'large',
);
my $keyword = shift;
my $pages;
my $start;
foreach(@ARGV) {
    if(/^\s*pages\s*=\s*(\d+)\s*/) {
        $pages=$1;
    }
    elsif(/^\s*start\s*=\s*(\d+)\s*/) {
        $start=$1;
    }
    elsif(/^\s*([^=]+)=(.+)/) {
        $args{$1}=$2;
    }
}
die("Give me a keyword!\n") unless($keyword);
$pages = 1 unless($pages and $pages>1);
$start = 0 unless($start and $start>0);
local $| = 1;
my @result;
my $pp = MyPlace::Yahoo::BOSS::get_count(%args);
foreach my $page (1 .. $pages) {
    $args{start} = $start + ($page - 1) * $pp;
    print STDERR "Searching \"" . $keyword . "\", start at " . $args{start} . "\n";
    my ($code,$results,$data) = MyPlace::Yahoo::BOSS::search_images($keyword,%args);
    if(ref $results) {
        print STDERR " [OK] Get " , scalar(@{$results}), " results.\n";
        print MyPlace::Yahoo::BOSS::extract_url($_),"\n" for(@{$results});
        sleep 1;
    }
    else {
        print STDERR " [Error] $results:$code\n"
    }
}






