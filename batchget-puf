#!/usr/bin/perl -w
###APPNAME:     batchget
###APPAUTHOR:   xiaoranzzz
###APPDATE:	Fri Sep 28 12:31:18 2007
###APPVER:	0.2
###APPDESC:     Download URLS,using simdo	
###APPUSAGE:	[OPTIONS...] [Task Name]
###APPEXAMPLE:	cat url.lst | batchget
###APPOPTION:	-m:Max number of simultanous tasks|-n:Task name|-a:Auto rename|-d:Create directories|-e:extension name for autorename|-w:Working directory|-r:Refer URL|-h:Display this text|-b:cookie|-L:Logging programe|-i:Auto rename by index

use strict;
use lib $ENV{XR_PERL_MODULE_DIR};
use Getopt::Std;

#BEGIN {srand(time());}

my %opts;
getopts('hm:n:ade:w:r:L:b:i',\%opts);
exit(system("formathelp",$0,"-n")) if($opts{"h"});

my $def_mul=3;
my $createdir = $opts{"d"} ? $opts{"d"} : 0;
my $muldown   = $opts{"m"} ? $opts{"m"} : $def_mul;
my $taskname  = $opts{"n"} ? $opts{"n"} : "";
my $autoname  = $opts{"a"} ? $opts{"a"} : 0;
my $extname   = $opts{"e"} ? $opts{"e"} : "";
my $workdir   = $opts{"w"} ? $opts{"w"} : "";
my $refer     = $opts{"r"} ? $opts{"r"} : "";
my $logger    = $opts{"L"} ? $opts{"L"} : "";
my $cookie    = $opts{"b"} ? $opts{"b"} : "";
my $number    = $opts{"i"} ? $opts{"i"} : "";
$autoname="true" if($number);

$taskname = shift unless($taskname and @ARGV);
$taskname = "" unless($taskname);
$muldown = 1 if( $muldown<1);

if($workdir) {
    mkdir $workdir unless(-d $workdir);
    $workdir .= "/" unless($workdir =~ /\/$/);
#    chdir($workdir);
}

my @URLS;
my $count=0;
while(<STDIN>) {
    chomp;
    push @URLS,$_;
    $count++;
#    print STDERR ("\r$count URLS enqueued...                 ");
}
#print STDERR ("\n");
exit 0 unless($count);

my $index;

sub Uniqname($);
sub Uniqname($) {
    my $ext =shift;
    my $max = 10000000000;
    my $n1 = int (rand($max));
    my $n2 = log($max / $n1)/log(10);
    my $result=$n1 . "0"x$n2 . $ext;
    return $result unless(-f $result);
    return Uniqname($ext);
}
sub GetFilename_Auto {
    my $URL=shift;
    #my $num=shift;
    my $result;
    #my $ext=$extname;
    #($ext=$URL) =~ s/^.*\.([^\.]*)$/.$1/ unless($ext);
    #$result=$num ? "$num$ext" : Uniqname($ext);
    $result = $URL;
    $result =~ s/^.*:\/\///;
    $result =~ s/\//_/g;
    $result =~ s/&//g;
    if($createdir) {
        my $dirname=$URL;
        $dirname =~ s/^.*:\/*[^\/]*\///;
        $dirname =~ s/\/[^\/]*//;
        $dirname .= "/" if($dirname);
        $result = $dirname . $result;    
    }
    return $result;
}
sub GetFilename_NoAuto {
    my $result=shift;
    if($createdir) {
        $result =~ s/^.*:\/*[^\/]*\///;
    }
    else {
        $result =~ s/^.*\///;
    }
    return $result;
}

sub pushArgPair(\@$$) {
    my $DARG=shift;
    my $key=shift;
    my $value=shift;
    if($value) {
        push @{$DARG},$key;
        push @{$DARG},$value;
    }
}

if($cookie) {
    system("mkcookie '$cookie' >download.cookie");
    $cookie="download.cookie";
}


my @DARGS=("-c","-u","-nb","-nf","-lc",10,"-ll",5,"-U","Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)","-Tc",20,"-t",2);#,"-Tl",15,"-Tc",20);
push @DARGS,"-P",$workdir if($workdir);
#open FO,"|-","puf",@DARGS,"-i","-" or die("$!\n");
print STDERR "Batchget enqueuing tasks...\n";
foreach my $URL(@URLS) {
    $index++;
    my $curname= $taskname ? "[$taskname $index/$count]" : "[$index/$count]";
    my $stridx = "0" x (length($count)-length($index)+1) . $index if($number);
    my $filename= $autoname ? GetFilename_Auto($URL,$stridx) : GetFilename_NoAuto($URL);
    print STDERR "\renqueue $curname : $URL";
    push @DARGS,$URL;
#  print FO "$URL\n" if($URL);
}
print STDERR "\n";
print STDERR "Batchget starting download(puf used)...\n",$workdir ?  "$workdir>\n" : "";
#close FO;
exec ('puf',@DARGS);
#close FO;


