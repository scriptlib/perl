#!/usr/bin/perl -w
# $Id$
use strict;
require v5.10.0;
our $VERSION = 'v0.1';

sub push_remote {
    my @remotes;
    open FI,"-|","git remote";
    while(<FI>) {
        chomp;
        push @remotes,$_ if($_);
    }
    close FI;
    if(@remotes) {
        foreach(@remotes) {
            my $url = `git config --get "remote.$_.url"`;
            chomp($url);
            #print "pushing to [$_] $url ...\n";
            if(system(qw/git push -v/,$_)==0) {
#                return 1;
            }
            else {
                print "pushing to $_ failed\n";
                return undef;
            }
        }
        return 1;
    }
    else {
       print "NO remotes found, stop pushing\n";
       return undef;
    }
}

my $NEED_COMMIT = `git diff`;
chomp($NEED_COMMIT);
my $idx = 1;
my $total = 3;
#$NEED_COMMIT ? 3 : 2;

print "[$idx/$total] git commit ", (@ARGV ? join(" ",@ARGV) : ""), "\n";
if($NEED_COMMIT) {
    if (system(qw/git commit/,@ARGV) != 0) {
        die "[$idx/$total] git commit failed\n";
    }
}
else {
    system(qw/git commit/,@ARGV);
}
$idx++;


print "[$idx/$total] git svn dcommit\n";
if(system(qw/git svn dcommit/) != 0) {
    die "[$idx/$total] git svn dcommit failed\n";
}
$idx++;


print "[$idx/$total] git push --all [remotes]\n";
#system(qw/git remote -v/);
if(!push_remote()) {
    die "[$idx/$total] git push --all [remotes] failed\n";
}
$idx++;


exit 0;



__END__

=pod

=head1  NAME

git-svn-push - PERL script

=head1  SYNOPSIS

git-svn-push [options] ...

=head1  OPTIONS

=over 12

=item B<--version>

Print version infomation.

=item B<-h>,B<--help>

Print a brief help message and exits.

=item B<--manual>,B<--man>

View application manual

=item B<--edit-me>

Invoke 'editor' against the source

=back

=head1  DESCRIPTION

___DESC___

=head1  CHANGELOG

    2010-10-31  xiaoranzzz  <xiaoranzzz@myplace.hell>
        
        * file created.

=head1  AUTHOR

xiaoranzzz <xiaoranzzz@myplace.hell>

=cut

#       vim:filetype=perl
