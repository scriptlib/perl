#!/usr/bin/perl -w
# $Id$
use strict;
require v5.8.0;
our $VERSION = 'v0.1';

BEGIN
{
    my $PROGRAM_DIR = $0;
    $PROGRAM_DIR =~ s/[^\/\\]+$//;
    $PROGRAM_DIR = "./" unless($PROGRAM_DIR);
    unshift @INC, 
        map "$PROGRAM_DIR$_",qw{modules lib ../modules ..lib};
}

my %OPTS;
my @OPTIONS = qw/help|h|? version|ver edit-me manual|man/;

if(@ARGV)
{
    require Getopt::Long;
    require MyPlace::Usage;
    Getopt::Long::GetOptions(\%OPTS,@OPTIONS);
    MyPlace::Usage::Process(\%OPTS,$VERSION);
}
else
{
    require MyPlace::Usage;
    MyPlace::Usage::PrintHelp();
}
use MyPlace::URLRule;
use Data::Dumper;


sub test
{
    my ($status1,$rule,$result) = urlrule_process_args(@_);
    print STDERR Data::Dumper->Dump([$rule,$result],[qw/*rule *result/]);
    if($status1) 
    {
        my($pass_count,@pass_args) = urlrule_get_passdown($rule,$result);
        if($pass_count and $pass_count>0)
        {
            foreach(@pass_args)
            {
                &test(@{$_});
            }
        }
    }
}

&test(undef,@ARGV);

__END__

=pod

=head1  NAME

urlrule_test - test urlrule

=head1  SYNOPSIS

urlrule_test [options] url [level] [action] [args...]

=head1  OPTIONS

=over 12

=item B<--version>

Print version infomation.

=item B<-h>,B<--help>

Print a brief help message and exits.

=item B<--manual>,B<--man>

View application manual

=item B<--edit-me>

Invoke 'editor' against the source

=back

=head1  DESCRIPTION

___DESC___

=head1  CHANGELOG

    2010-06-13  xiaoranzzz  <xiaoranzzz@myplace.hell>
        
        * file created.

=head1  AUTHOR

xiaoranzzz <xiaoranzzz@myplace.hell>

=cut


