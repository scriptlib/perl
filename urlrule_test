#!/usr/bin/perl -w
# $Id$
use strict;
require v5.8.0;
our $VERSION = 'v2.0';

BEGIN
{
    my $PROGRAM_DIR = $0;
    $PROGRAM_DIR =~ s/[^\/\\]+$//;
    $PROGRAM_DIR = "./" unless($PROGRAM_DIR);
    unshift @INC, 
        map "$PROGRAM_DIR$_",qw{modules lib ../modules ..lib};
}

my %OPTS;
my @OPTIONS = qw/help|h|? version|ver edit-me manual|man/;

if(@ARGV)
{
    require Getopt::Long;
    require MyPlace::Usage;
    Getopt::Long::GetOptions(\%OPTS,@OPTIONS);
    MyPlace::Usage::Process(\%OPTS,$VERSION);
}
else
{
    require MyPlace::Usage;
    MyPlace::Usage::PrintHelp();
}
use MyPlace::URLRule::OO;
use Data::Dumper;


my $RH = new MyPlace::URLRule::OO(
		createdir=>0,
		buildurl=>1,
		callback_process=>\&Dump,
	);

sub Dump {
	my $RH = shift;
	my $response = shift;
	my %Response;
	foreach(qw/url level title data nextlevel/) {
		$Response{$_} = $response->{$_};
	}
	print STDERR Data::Dumper->Dump([\%Response],['*Response']);
}
$RH->autoApply(@ARGV);

__END__

=pod

=head1  NAME

urlrule_test - test urlrule

=head1  SYNOPSIS

urlrule_test [options] url [level] [action] [args...]

=head1  OPTIONS

=over 12

=item B<--version>

Print version infomation.

=item B<-h>,B<--help>

Print a brief help message and exits.

=item B<--manual>,B<--man>

View application manual

=item B<--edit-me>

Invoke 'editor' against the source

=back

=head1  DESCRIPTION

___DESC___

=head1  CHANGELOG

    2010-06-13  xiaoranzzz  <xiaoranzzz@myplace.hell>
        
        * file created.

=head1  AUTHOR

xiaoranzzz <xiaoranzzz@myplace.hell>

=cut


