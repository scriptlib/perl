#!/usr/bin/perl -w
# $Id$
use strict;
require v5.8.0;
our $VERSION = 'v0.2';

BEGIN
{
    our $PROGRAM_DIR = $ENV{XR_PERL_SOURCE_DIR};
    unless($PROGRAM_DIR) {
        $PROGRAM_DIR = $0;
        $PROGRAM_DIR =~ s/[^\/\\]+$//;
        $PROGRAM_DIR =~ s/\/+$//;
        $PROGRAM_DIR = "." unless($PROGRAM_DIR);
    }
    unshift @INC, 
        map "$PROGRAM_DIR/$_",qw{modules lib ../modules ..lib};
}

my %OPTS;
my @OPTIONS = qw/help|h|? version|ver command|s=s X m M f=s q=s t=s l r d v c V/;

if(@ARGV)
{
    require Getopt::Long;
    require MyPlace::Usage;
	Getopt::Long::Configure('no_ignore_case'); 
    Getopt::Long::GetOptions(\%OPTS,@OPTIONS);
    MyPlace::Usage::Process(\%OPTS,$VERSION);
}
else
{
    require MyPlace::Usage;
    MyPlace::Usage::PrintHelp();
    exit 0;
}
my @envs;
if($OPTS{X} and $ENV{'DISPLAY'}) {
	push @envs,"DISPLAY=$ENV{'DISPLAY'}";
}
my $time = $OPTS{t};
use Time::localtime;
my $year = localtime->year() + 1900;
my $month = localtime->mon() + 1;
my $day = localtime->mday();
my $hour = localtime->hour();
my $min = localtime->min();
if($OPTS{t}) {
	if($OPTS{t} =~ m/^(\d\d?):(\d\d?)$/) {
		my $h = $1;
		my $m = $2;
		if($hour > $h) {
			$day = $day + 1;
		}
		elsif($hour == $h and $min > $m) {
			$day = $day + 1;
		}
		if($day > 31) {
			$month = $month + 1;
		}
		if($month > 12) {
			$year = $year + 1;
		}
		$time = sprintf("%04d%02d%02d%02d%02d",$year,$month,$day,$h,$m);
	}
	elsif($OPTS{t} =~ m/^\s*(\d+)\s+(\d\d?):(\d\d?)$/) {
		$time = sprintf("%s%02d%02d",$1,$2,$3);
	}
}
$OPTS{t} = $time;
my $command; 
my @args;
foreach(keys %OPTS) {
	if($_ eq 'command') {
		$command = $OPTS{$_};
	}
	elsif($_ eq 'X') {
	}
	else {
		push @args,"-" . $_;
		push @args,$OPTS{$_} if($OPTS{$_});
	}
}
if($command) {
	if(@envs) {
		$command = join(" ",@envs) . " $command";
	}
	print "command [$command] at (",join(" ",@args), ")\n";
	open FO,"|-",'at',@args or die;
	print FO $command , "\n";
	close FO;
}
else {
	exec("at",@args);
}




__END__

=pod

=head1  NAME

r-at - MyPlace at enchancing script

=head1  SYNOPSIS

r-at [options] ...

=head1  OPTIONS

=over 12

=item B<--version>

Print version infomation.

=item B<-h>,B<--help>

Print a brief help message and exits.

=item B<-s>,B<--command>

Specify what command to run.

=item B<--X>

Require X Windows.

=back

=head1  DESCRIPTION

___DESC___

=head1  CHANGELOG

    2011-09-30 18:22  afun  <afun@myplace.hell>
        
        * file created.

	2011-09-30 20:06  afun	<afun@myplace.hell>
		
		* enchanced '-t' option.
		* version 0.2

=head1  AUTHOR

afun <afun@myplace.hell>

=cut

#       vim:filetype=perl
